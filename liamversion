import pygame
import os
pygame.init()
pygame.mixer.init()
game_folder = os.path.dirname(__file__)
img_folder = os.path.join(game_folder, "img")
WIDTH = 900
HEIGHT = 600
win = pygame.display.set_mode((WIDTH,HEIGHT))
FPS = 30
class Player(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load(os.path.join(img_folder, "scan.png")).convert()
        self.rect = self.image.get_rect()
        self.rect.x = 200
        self.rect.y = 200
        self.x_vel = 10
        self.y_vel = 10
    def update(self):
        self.x_vel = 0
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT] and not self.rect.x < 0 :
            self.x_vel = -10
        if keys[pygame.K_RIGHT] and not self.rect.x > WIDTH:
            self.x_vel = 10
        if keys[pygame.K_UP] and not self.rect.top >0:
            self.y_vel = 10
        if keys[pygame.K_DOWN] and not self.rect.bottom <HEIGHT:
            self.y_vel = 10
        self.rect.right += self.x_vel
        self.rect.right += self.x_vel
all_sprites=pygame.sprite.Group()
player = Player()
players = pygame.sprite.Group()
players.add(player)
all_sprites.add(players)


# set the windows size

# set title
pygame.display.set_caption("JUMP")
clock=pygame.time.Clock()
run = True
while run: # keep looping
    clock.tick(FPS)  # refresh rate
    for event in pygame.event.get():
        if event.type == pygame.QUIT:  # x in top right
            run = False
    all_sprites.update()
    # set background Colour
    win.fill((0,0,0))
    # draw rectangle in position and set colour
    # redraw the screen
    all_sprites.draw(win)
    pygame.display.flip()
pygame.quit()  # exit game
