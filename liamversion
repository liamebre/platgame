import pygame
import os
pygame.init()
pygame.mixer.init()
game_folder = os.path.dirname(__file__)
img_folder = os.path.join(game_folder, "img")
WIDTH = 900
HEIGHT = 600
win = pygame.display.set_mode((WIDTH,HEIGHT))
FPS = 30
class Player(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load(os.path.join(img_folder, "scans2.png")).convert()
        self.rect = self.image.get_rect()
        self.rect.x = 100
        self.rect.y = 100
        self.x_vel = 10
        self.y_vel = 5
        self.grav = 0.5
        self.jump_height = 20
        self.jump_speed = self.jump_height
        self.jump = False
    def update(self):
        self.x_vel = 0
        self.y_vel = 10
        self.grav = 0.5
        keys = pygame.key.get_pressed()
        if keys[pygame.K_a]:
            self.x_vel = -10
        if keys[pygame.K_d]:
            self.x_vel = 10
        self.rect.x += self.x_vel
        ground = pygame.sprite.groupcollide(players, plats, False, False)
        if ground:
            self.y_vel = 0
        if keys[pygame.K_w]:
            self.jump = True
        if self.jump:
            self.rect.y -= self.jump_speed
            self.jump_speed -= self.grav
            if self.jump_speed < -self.jump_height or ground:
                self.jump_speed = self.jump_height
                self.jump = False
        self.rect.y += self.y_vel


class Platform(pygame.sprite.Sprite):
    def __init__(self,x,y):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load(os.path.join(img_folder, "wall.png")).convert()
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y



all_sprites=pygame.sprite.Group()
player = Player()
players = pygame.sprite.Group()
players.add(player)

plats = pygame.sprite.Group()
plat = Platform(150,490)
plat2 = Platform(0,490)
all_sprites.add(plat,plat2)
plats.add(plat,plat2)
all_sprites.add(players)
# set the windows size

# set title
pygame.display.set_caption("JUMP")
clock = pygame.time.Clock()
run = True
while run:  # keep looping
    clock.tick(FPS)  # refresh rate
    for event in pygame.event.get():
        if event.type == pygame.QUIT:  # x in top right
            run = False
    all_sprites.update()
    # set background Colour
    win.fill((0,0,0))
    # draw rectangle in position and set colour
    # redraw the screen
    all_sprites.draw(win)
    pygame.display.flip()
pygame.quit()  # exit game
